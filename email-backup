#!rsc
# RouterOS script: email-backup
# Copyright (c) 2013-2019 Christian Hesse <mail@eworm.de>
#
# create and email backup and config file

:global Identity;
:global Domain;
:global EmailBackupTo;
:global EmailBackupCc;
:global BackupSendBinary;
:global BackupSendExport;
:global BackupPassword;

:if ($BackupSendBinary != true && \
     $BackupSendExport != true) do={
  :log error ("Configured to send neither backup nor config export.");
  :error "Error: See log for details.";
}

# filename based on identity
:local FileName ($Identity . "." . $Domain);
:local BackupFile "none";
:local ConfigFile "none";
:local Attach [ :toarray "" ];

# get some system information
:local BoardName [ / system resource get board-name ];
:local Model [ / system routerboard get model ];
:local SerialNumber [ / system routerboard get serial-number ];
:local Channel [ / system package update get channel ];
:local InstalledVersion [ / system package update get installed-version ];

# binary backup
:if ($BackupSendBinary = true) do={
  / system backup save encryption=aes-sha256 name=$FileName password=$BackupPassword;
  :set BackupFile ($FileName . ".backup");
  :set Attach ($Attach, $BackupFile);
}

# create configuration export
:if ($BackupSendExport = true) do={
  / export terse file=$FileName;
  :set ConfigFile ($FileName . ".rsc");
  :set Attach ($Attach, $ConfigFile);
}

# send email with status and files
/ tool e-mail send to=$EmailBackupTo cc=$EmailBackupCc \
    subject=("[" . $Identity . "] Backup & Config") \
    body=("Backup and config export for " . $Identity . ".\n\n" . \
      "Board name:    " . $BoardName . "\n" . \
      "Model:         " . $Model . "\n" . \
      "Serial number: " . $SerialNumber . "\n" . \
      "Hostname:      " . $Identity . "\n" . \
      "Channel:       " . $Channel . "\n" . \
      "RouterOS:      " . $InstalledVersion . "\n\n" . \
      "Backup file:   " . $BackupFile . "\n" . \
      "Config file:   " . $ConfigFile) \
    file=$Attach;
}
